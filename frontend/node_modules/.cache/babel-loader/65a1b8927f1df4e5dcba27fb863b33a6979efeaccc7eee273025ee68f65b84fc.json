{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BLESSY\\\\OneDrive\\\\Desktop\\\\project\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useEffect, useState } from 'react';\nimport jwt_decode from \"jwt-decode\";\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport default AuthContext;\nexport const AuthProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  let [authTokens, setAuthTokens] = useState(() => localStorage.getItem('authTokens') ? JSON.parse(localStorage.getItem('authTokens')) : null);\n  let [user, setUser] = useState(localStorage.getItem('authTokens') ? jwt_decode(localStorage.getItem('authTokens')) : null);\n  const navigate = useNavigate();\n  let loginUser = async e => {\n    e.preventDefault();\n    console.log('Form is submitted');\n    let response = await fetch('http://127.0.0.1:8000/api/token/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        'username': e.target.username.value,\n        'password': e.target.password.value\n      })\n    });\n    let data = await response.json();\n    if (response.status === 200) {\n      setAuthTokens(data);\n      console.log(data.access);\n      console.log(\"uuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuu\", data);\n      setUser(jwt_decode(data.access));\n      localStorage.setItem('authTokens', JSON.stringify(data));\n      navigate('/');\n    } else {\n      alert('Something went worng here!!');\n    }\n  };\n  let contextData = {\n    user: user,\n    loginUser: loginUser\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextData,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"uiTyYUjxJtYjozZWTlk9yrbg5eQ=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useEffect","useState","jwt_decode","useNavigate","AuthContext","AuthProvider","children","authTokens","setAuthTokens","localStorage","getItem","JSON","parse","user","setUser","navigate","loginUser","e","preventDefault","console","log","response","fetch","method","headers","body","stringify","target","username","value","password","data","json","status","access","setItem","alert","contextData"],"sources":["C:/Users/BLESSY/OneDrive/Desktop/project/frontend/src/context/AuthContext.js"],"sourcesContent":["import {createContext, useEffect, useState } from 'react'\r\nimport jwt_decode from \"jwt-decode\"\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nconst AuthContext = createContext()\r\n\r\nexport default AuthContext\r\n\r\n\r\nexport const AuthProvider = ({children}) => {\r\n\r\n    \r\n    let [authTokens, setAuthTokens] = useState(() => localStorage.getItem('authTokens') ? JSON.parse(localStorage.getItem('authTokens')) : null)\r\n    let [user, setUser] = useState(localStorage.getItem('authTokens') ? jwt_decode(localStorage.getItem('authTokens')) : null)\r\n\r\n    const navigate = useNavigate()\r\n\r\n    let loginUser = async (e) => {\r\n        e.preventDefault()\r\n        console.log('Form is submitted')\r\n        let response = await fetch('http://127.0.0.1:8000/api/token/',{\r\n            method:'POST',\r\n            headers:{\r\n                'Content-Type':'application/json'\r\n            },\r\n            body: JSON.stringify({'username':e.target.username.value, 'password':e.target.password.value})\r\n        })\r\n        let data = await response.json()\r\n        if (response.status === 200){\r\n            setAuthTokens(data)\r\n            console.log(data.access);\r\n            console.log(\"uuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuu\",data);\r\n\r\n            setUser(jwt_decode(data.access))\r\n            localStorage.setItem('authTokens', JSON.stringify(data))\r\n            navigate('/')\r\n        }else{\r\n            alert('Something went worng here!!')\r\n        }\r\n    }\r\n\r\n    let contextData = {\r\n        user:user,\r\n        loginUser:loginUser\r\n    }\r\n\r\n    return (\r\n        <AuthContext.Provider value={contextData}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    )\r\n}"],"mappings":";;AAAA,SAAQA,aAAa,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACzD,OAAOC,UAAU,MAAM,YAAY;AACnC,SAASC,WAAW,QAAQ,kBAAkB;AAAA;AAE9C,MAAMC,WAAW,gBAAGL,aAAa,EAAE;AAEnC,eAAeK,WAAW;AAG1B,OAAO,MAAMC,YAAY,GAAG,QAAgB;EAAA;EAAA,IAAf;IAACC;EAAQ,CAAC;EAGnC,IAAI,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,MAAMQ,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,CAAC,GAAG,IAAI,CAAC;EAC5I,IAAI,CAACG,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAACQ,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,GAAGR,UAAU,CAACO,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,CAAC,GAAG,IAAI,CAAC;EAE1H,MAAMK,QAAQ,GAAGZ,WAAW,EAAE;EAE9B,IAAIa,SAAS,GAAG,MAAOC,CAAC,IAAK;IACzBA,CAAC,CAACC,cAAc,EAAE;IAClBC,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;IAChC,IAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,EAAC;MAC1DC,MAAM,EAAC,MAAM;MACbC,OAAO,EAAC;QACJ,cAAc,EAAC;MACnB,CAAC;MACDC,IAAI,EAAEd,IAAI,CAACe,SAAS,CAAC;QAAC,UAAU,EAACT,CAAC,CAACU,MAAM,CAACC,QAAQ,CAACC,KAAK;QAAE,UAAU,EAACZ,CAAC,CAACU,MAAM,CAACG,QAAQ,CAACD;MAAK,CAAC;IACjG,CAAC,CAAC;IACF,IAAIE,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,EAAE;IAChC,IAAIX,QAAQ,CAACY,MAAM,KAAK,GAAG,EAAC;MACxBzB,aAAa,CAACuB,IAAI,CAAC;MACnBZ,OAAO,CAACC,GAAG,CAACW,IAAI,CAACG,MAAM,CAAC;MACxBf,OAAO,CAACC,GAAG,CAAC,sCAAsC,EAACW,IAAI,CAAC;MAExDjB,OAAO,CAACZ,UAAU,CAAC6B,IAAI,CAACG,MAAM,CAAC,CAAC;MAChCzB,YAAY,CAAC0B,OAAO,CAAC,YAAY,EAAExB,IAAI,CAACe,SAAS,CAACK,IAAI,CAAC,CAAC;MACxDhB,QAAQ,CAAC,GAAG,CAAC;IACjB,CAAC,MAAI;MACDqB,KAAK,CAAC,6BAA6B,CAAC;IACxC;EACJ,CAAC;EAED,IAAIC,WAAW,GAAG;IACdxB,IAAI,EAACA,IAAI;IACTG,SAAS,EAACA;EACd,CAAC;EAED,oBACI,QAAC,WAAW,CAAC,QAAQ;IAAC,KAAK,EAAEqB,WAAY;IAAA,UACpC/B;EAAQ;IAAA;IAAA;IAAA;EAAA,QACU;AAE/B,CAAC;AAAA,GA1CYD,YAAY;EAAA,QAMJF,WAAW;AAAA;AAAA,KANnBE,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}