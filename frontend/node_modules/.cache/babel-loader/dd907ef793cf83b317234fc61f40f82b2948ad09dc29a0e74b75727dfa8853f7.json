{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BLESSY\\\\OneDrive\\\\Desktop\\\\project\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useEffect, useState } from 'react';\nimport jwt_decode from \"jwt-decode\";\nimport { useNavigate } from 'react-router-dom';\nimport Swal from 'sweetalert2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport default AuthContext;\nexport const AuthProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  let [authTokens, setAuthTokens] = useState(() => localStorage.getItem('authTokens') ? JSON.parse(localStorage.getItem('authTokens')) : null);\n  let [user, setUser] = useState(() => localStorage.getItem('authTokens') ? jwt_decode(localStorage.getItem('authTokens')) : null);\n  let [admin, setAdmin] = useState(() => localStorage.getItem('authTokens') ? jwt_decode(localStorage.getItem('authTokens')) : null);\n  let [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n  let loginUser = async e => {\n    e.preventDefault();\n    console.log('Form is submitted');\n    let response = await fetch('http://127.0.0.1:8000/api/token/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        'username': e.target.username.value,\n        'password': e.target.password.value\n      })\n    });\n    let data = await response.json();\n    if (response.status === 200) {\n      setAuthTokens(data);\n      console.log(data.access);\n      console.log(\"uuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuu\", data);\n      setUser(jwt_decode(data.access));\n      localStorage.setItem('authTokens', JSON.stringify(data));\n      navigate('/home');\n    } else {\n      Swal.fire(\"Error\", 'Invalid Credentials!!');\n    }\n  };\n  let logoutUser = () => {\n    Swal.fire({\n      title: 'Confirm',\n      text: 'Are you sure to logout ?',\n      icon: 'info',\n      confirmButtonText: 'Continue',\n      showCancelButton: true\n    }).then(result => {\n      if (result.isConfirmed) {\n        setAuthTokens(null);\n        setUser(null);\n        localStorage.removeItem('authTokens');\n        navigate('/');\n      }\n    });\n  };\n  let updateToken = async () => {\n    console.log('Update Toked Called');\n    let response = await fetch('http://127.0.0.1:8000/api/token/refresh/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        'refresh': authTokens === null || authTokens === void 0 ? void 0 : authTokens.refresh\n      })\n    });\n    let data = await response.json();\n    if (response.status === 200) {\n      setAuthTokens(data);\n      setUser(jwt_decode(data.access));\n      localStorage.setItem('authTokens', JSON.stringify(data));\n    } else {\n      logoutUser();\n    }\n    if (loading) {\n      setLoading(false);\n    }\n  };\n\n  // Admin Login and Logout\n\n  let loginAdmin = async e => {\n    console.log;\n  };\n  let contextData = {\n    user: user,\n    authTokens: authTokens,\n    loginUser: loginUser,\n    logoutUser: logoutUser\n  };\n  useEffect(() => {\n    let fourMinutes = 1000 * 60 * 10;\n    let interval = setInterval(() => {\n      if (authTokens) {\n        updateToken();\n      }\n    }, fourMinutes);\n    return () => clearInterval(interval);\n  }, [authTokens, loading]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextData,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"yq4uVRTabcwDHC6dCaV44SthWHg=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useEffect","useState","jwt_decode","useNavigate","Swal","AuthContext","AuthProvider","children","authTokens","setAuthTokens","localStorage","getItem","JSON","parse","user","setUser","admin","setAdmin","loading","setLoading","navigate","loginUser","e","preventDefault","console","log","response","fetch","method","headers","body","stringify","target","username","value","password","data","json","status","access","setItem","fire","logoutUser","title","text","icon","confirmButtonText","showCancelButton","then","result","isConfirmed","removeItem","updateToken","refresh","loginAdmin","contextData","fourMinutes","interval","setInterval","clearInterval"],"sources":["C:/Users/BLESSY/OneDrive/Desktop/project/frontend/src/context/AuthContext.js"],"sourcesContent":["import {createContext, useEffect, useState } from 'react'\r\nimport jwt_decode from \"jwt-decode\"\r\nimport { useNavigate } from 'react-router-dom'\r\nimport Swal from 'sweetalert2'\r\n\r\n\r\nconst AuthContext = createContext()\r\n\r\nexport default AuthContext\r\n\r\n\r\nexport const AuthProvider = ({children}) => {\r\n    \r\n    let [authTokens, setAuthTokens] = useState(() => localStorage.getItem('authTokens') ? JSON.parse(localStorage.getItem('authTokens')) : null)\r\n    let [user, setUser] = useState(() => localStorage.getItem('authTokens') ? jwt_decode(localStorage.getItem('authTokens')) : null)\r\n    let [admin, setAdmin] = useState( ()=> localStorage.getItem('authTokens') ? jwt_decode(localStorage.getItem('authTokens')) : null)\r\n    let [loading, setLoading] = useState(true)\r\n\r\n    const navigate = useNavigate()\r\n\r\n\r\n    let loginUser = async (e) => {\r\n        e.preventDefault()\r\n        console.log('Form is submitted')\r\n\r\n        let response = await fetch('http://127.0.0.1:8000/api/token/',{\r\n            method:'POST',\r\n            headers:{\r\n                'Content-Type':'application/json'\r\n            },\r\n            body: JSON.stringify({'username':e.target.username.value, 'password':e.target.password.value})\r\n        })\r\n        let data = await response.json()\r\n\r\n        if (response.status === 200){\r\n            setAuthTokens(data)\r\n            console.log(data.access);\r\n            console.log(\"uuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuu\",data);\r\n\r\n            setUser(jwt_decode(data.access))\r\n            localStorage.setItem('authTokens', JSON.stringify(data))\r\n            navigate('/home')\r\n        }else{\r\n            Swal.fire(\"Error\",'Invalid Credentials!!')\r\n        }\r\n    }\r\n\r\n    let logoutUser = () => {\r\n        Swal.fire({\r\n            title: 'Confirm',\r\n            text: 'Are you sure to logout ?',\r\n            icon: 'info',\r\n            confirmButtonText: 'Continue',\r\n            showCancelButton:true\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                setAuthTokens(null)\r\n                setUser(null)\r\n                localStorage.removeItem('authTokens')\r\n                navigate('/')\r\n            }\r\n        })\r\n    }\r\n\r\n    let updateToken = async() => {\r\n        console.log('Update Toked Called')\r\n        let response = await fetch('http://127.0.0.1:8000/api/token/refresh/',{\r\n            method:'POST',\r\n            headers:{\r\n                'Content-Type':'application/json'\r\n            },\r\n            body: JSON.stringify({'refresh':authTokens?.refresh})\r\n        })\r\n        let data = await response.json()\r\n\r\n        if (response.status === 200){\r\n            setAuthTokens(data)\r\n            setUser(jwt_decode(data.access))\r\n            localStorage.setItem('authTokens', JSON.stringify(data))\r\n        }else{\r\n            logoutUser()\r\n        }\r\n\r\n        if(loading){\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    // Admin Login and Logout\r\n\r\n\r\n    let loginAdmin = async (e) =>{\r\n        console.log\r\n    }\r\n\r\n\r\n    let contextData = {\r\n        user:user,\r\n        authTokens:authTokens,\r\n        loginUser:loginUser,\r\n        logoutUser:logoutUser\r\n    }\r\n\r\n    useEffect(()=> {\r\n       let fourMinutes = 1000 * 60 * 10\r\n       let interval = setInterval(()=> {\r\n            if(authTokens){\r\n                updateToken()\r\n            }\r\n        }, fourMinutes)\r\n        return ()=> clearInterval(interval)\r\n\r\n    }, [authTokens, loading])\r\n\r\n    return (\r\n        <AuthContext.Provider value={contextData}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}